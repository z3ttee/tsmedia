.slideLeft-enter-active {
    animation: slideInLeft $animSpeedLong*1s $cubicNorm;
}
.slideLeft-leave-active {
    animation: slideOutLeft $animSpeedLong*1s $cubicNorm;
}
.slideUp-enter-active {
    animation: slideInUp $animSpeedLong*1s $cubicNorm;
}
.slideUp-leave-active {
    animation: slideOutDown $animSpeedLong*1s $cubicNorm;
}
.toast-enter-active {
    animation: toastBounceIn $animSpeedLong*1s $cubicNorm;
}
.toast-leave-active {
    animation: toastBounceOut $animSpeedNormal*1s $cubicNorm;
}
.modalScale-enter-active {
    animation: scaleInModal $animSpeedNormal*1s $cubicNorm forwards;
}
.modalScale-leave-active {
    animation: scaleOutModal $animSpeedNormal*1s $cubicNorm forwards;
}

/*
Toast
*/
@keyframes toastBounceIn {
    0% {
        opacity: 0;
        transform: translateX(-50%) translateY(20px);
    }
    50% {
        opacity: 1;
        transform: translateX(-50%) translateY(-4px);
    }
    100% {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}
@keyframes toastBounceOut {
    0% {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateX(-50%) translateY(20px);
    }
}

/*
ScaleIn
*/
@keyframes scaleInModal {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}
@keyframes scaleOutModal {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.9);
    }
}

/*
Slide Left
*/
@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
@keyframes slideOutLeft {
    to {
        opacity: 0;
        transform: translateX(-20px);
    }
    from {
        opacity: 1;
        transform: translateX(0);
    }
}
/*
Slide Up
*/
@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
@keyframes slideOutDown {
    to {
        opacity: 0;
        transform: translateY(20px);
    }
    from {
        opacity: 1;
        transform: translateY(0);
    }
}




/*
[]=========== Press ===========[]
*/
$pressableTypes: ('s': 0.99, 'm': 0.98, 'l': 0.97, 'xl': 0.94);

@mixin pressable($type) {
    transition: all $animSpeedFast*1s $cubicNorm;
    cursor: pointer;
        
    &:active {
        transform: scale(map-get($pressableTypes, $type));
    }
}
@each $type in map-keys($pressableTypes) {
    .pressable-#{$type} {
        @include pressable($type);
    }
}

